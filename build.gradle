buildscript {
    repositories {
        mavenCentral()
        maven { url "https://repository-achartengine.forge.cloudbees.com/snapshot/" }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.1.0'
        classpath 'com.jakewharton.sdkmanager:gradle-plugin:0.12.0'
    }
}

apply plugin: 'android-sdk-manager'
apply plugin: 'com.android.application'

sourceCompatibility = 1.7
targetCompatibility = 1.6

repositories {
    mavenCentral()
}

android {
    compileSdkVersion 22
    buildToolsVersion "21.1.2"

    defaultConfig {
        versionCode 210
        versionName "10.6.991"
        minSdkVersion 16
        targetSdkVersion 22
        testApplicationId "org.liberty.android.fantastischmemo.test"
        testInstrumentationRunner "android.test.InstrumentationTestRunner"
    }

    buildTypes {
        debug {
            versionNameSuffix "-${getBuildString()}"
        }
        release {
            minifyEnabled true
            proguardFile 'proguard.cfg'
        }
    }

    productFlavors {
        free {
            applicationId "org.liberty.android.fantastischmemo"
        }
        pro {
            applicationId "org.liberty.android.fantastischmemopro"
        }
    }

    lintOptions {
        disable 'MissingTranslation'
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            java.srcDirs = ['src']
            resources.srcDirs = ['src']
            aidl.srcDirs = ['src']
            renderscript.srcDirs = ['src']
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
        }

        free {
            res.srcDirs = ['src-flavors/free/res']
        }

        pro {
            res.srcDirs = ['src-flavors/pro/res']
        }

        // Move the tests to tests/java, tests/res, etc...
        androidTest.setRoot('tests')

        androidTest {
            java.srcDirs = ['test/src']
            res.srcDirs = ['test/res']
            assets.srcDirs = ['test/assets']
            resources.srcDirs = ['test/src']
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')

    compile group: 'org.achartengine', name: 'achartengine', version: '1.2.0'
    compile group: 'net.sf.opencsv', name: 'opencsv', version: '2.3'
    compile group: 'com.android.support', name: 'appcompat-v7', version: '22.0.2'
    compile group: 'com.android.support', name: 'cardview-v7', version: '22.0.2'
    compile group: 'com.j256.ormlite', name: 'ormlite-core', version: '4.48'
    compile group: 'com.j256.ormlite', name: 'ormlite-android', version: '4.48'
    compile(group: 'org.roboguice', name: 'roboguice', version: '3.0.1') {
        exclude module: 'aopalliance'
        exclude module: 'cglib'
    }
    compile(group: 'com.google.inject.extensions', name: 'guice-assistedinject', version: '4.0-beta5') {
        exclude module: 'aopalliance'
        exclude module: 'guice'
        exclude module: 'cglib'
    }
    compile group: 'oauth.signpost:signpost-core', version: '1.2.1.2'
    compile(group: 'oauth.signpost:signpost-commonshttp4', version: '1.2.1.2') {
        exclude module: 'httpclient'
    }
    compile group: 'commons-io', name: 'commons-io', version: '2.4'

    compile group: 'com.google.guava', name: 'guava', version: '18.0'

    androidTestCompile group: 'com.google.dexmaker', name: 'dexmaker', version: '1.0'
    androidTestCompile(group: 'com.google.dexmaker', name: 'dexmaker-mockito', version: '1.0') {
        exclude module: 'hamcrest-core'
        exclude module: 'objenesis'
        exclude module: 'mockito-core'
    }
    androidTestCompile group: 'org.mockito', name: 'mockito-all', version: '1.9.5'
    androidTestCompile group: 'com.jayway.android.robotium', name: 'robotium-solo', version: '5.2.1'
}

def getBuildString () {
    def date = new Date()
    def formattedDate = date.format('yyMMdd')
    return "b" + formattedDate
}
